{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react-labwork2\\\\src\\\\Components\\\\Registration\\\\Registration.tsx\";\nimport React from 'react';\nimport { Route, useHistory } from 'react-router-dom';\nimport Auth from '../Auth/Auth';\nimport './Registration.css';\nexport default function Registration({\n  initialUsers,\n  onChange,\n  activeChange\n}) {\n  const newUser = {\n    name: '',\n    email: '',\n    password: ''\n  };\n  const history = useHistory();\n\n  const handleChange = user => {\n    onChange(user);\n  };\n\n  const handleActive = newActive => {\n    activeChange(newActive);\n  };\n\n  const validateUser = user => {\n    if (user.name === '') {\n      alert('Please write a name');\n      return true;\n    }\n\n    if (user.email === '') {\n      alert('Please write an email');\n      return true;\n    }\n\n    if (user.password === '' || user.password.length < 6) {\n      alert('Your password must contain 6 symbols');\n      return true;\n    }\n\n    if (user.email.indexOf('@') === -1) {\n      alert(\"Your email must have a '@' symbol\");\n      return true;\n    }\n\n    let check = false;\n    initialUsers.forEach(oldUser => {\n      if (oldUser.email === user.email) {\n        check = true;\n        alert(' There is such email, please write another one');\n      }\n    });\n    return check;\n  };\n\n  const handleSubmit = () => {\n    if (validateUser(newUser) === false) {\n      handleActive('auth');\n      handleChange(newUser);\n      let path = `newPath`;\n      history.push(path);\n      return /*#__PURE__*/React.createElement(Route, {\n        path: \"/auth\",\n        component: Auth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 20\n        }\n      });\n    }\n  }; // <Link to=\"/auth\" className = \"btn\"></Link>\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"registration-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"registration-input-label-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    onChange: e => {\n      newUser.name = e.target.value;\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Email\",\n    onChange: e => {\n      newUser.email = e.target.value;\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Password\",\n    onChange: e => {\n      newUser.password = e.target.value;\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-registration-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: () => handleActive(''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-sign-up\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Create account\")));\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/react-labwork2/src/Components/Registration/Registration.tsx"],"names":["React","Route","useHistory","Auth","Registration","initialUsers","onChange","activeChange","newUser","name","email","password","history","handleChange","user","handleActive","newActive","validateUser","alert","length","indexOf","check","forEach","oldUser","handleSubmit","path","push","e","target","value"],"mappings":"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","sourcesContent":["import React, { ReactElement } from 'react'\r\nimport { Route, useHistory } from 'react-router-dom';\r\nimport {User} from '../../App';\r\nimport Auth from '../Auth/Auth';\r\nimport './Registration.css';\r\n\r\n\r\ninterface Props {\r\n    initialUsers: User[],\r\n    onChange: (user: User) => void;\r\n    activeChange: (newActive: string) => void;\r\n}\r\n\r\nexport default function Registration({initialUsers, onChange,activeChange}: Props): ReactElement {\r\n    const newUser = {\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    };\r\n\r\n    const history = useHistory();\r\n\r\n    const handleChange = (user: User) => {\r\n        onChange(user);\r\n    }\r\n\r\n    const handleActive = (newActive: string) => {\r\n        activeChange(newActive);\r\n    }\r\n\r\n    const validateUser = (user : User) => {\r\n        if(user.name === ''){\r\n            alert('Please write a name');\r\n            return true;\r\n        }\r\n        if(user.email === ''){\r\n            alert('Please write an email');\r\n            return true;\r\n        }\r\n        if(user.password === '' || user.password.length < 6){\r\n            alert('Your password must contain 6 symbols');\r\n            return true;\r\n        }\r\n        if(user.email.indexOf('@') === -1){\r\n            alert(\"Your email must have a '@' symbol\");\r\n            return true;\r\n        }\r\n        let check = false;\r\n        initialUsers.forEach(oldUser => {\r\n            if(oldUser.email === user.email){\r\n                check = true;\r\n                alert(' There is such email, please write another one')\r\n            }\r\n        })\r\n        return check;\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if(validateUser(newUser) === false ){\r\n            \r\n            handleActive('auth');\r\n            handleChange(newUser);\r\n            let path = `newPath`; \r\n            history.push(path);\r\n            return <Route path='/auth' component = {Auth}/>\r\n        }\r\n    }\r\n     // <Link to=\"/auth\" className = \"btn\"></Link>\r\n    return (\r\n        <div className = \"registration-block\">\r\n                <div className = \"registration-input-label-block\">\r\n                    <input type = \"text\" placeholder = \"Name\" onChange = {e => { newUser.name = e.target.value}} required/>\r\n                    <input type = \"text\" placeholder = \"Email\" onChange = {e => { newUser.email = e.target.value}} required/>\r\n                    <input type = \"text\" placeholder = \"Password\" onChange = {e => { newUser.password = e.target.value}} required/>\r\n                </div>\r\n                <div className= \"btn-registration-block\">\r\n                    <button className = 'btn' onClick = {()=> handleActive('')}>Back</button>\r\n                    <button className = 'btn btn-sign-up' onClick = {handleSubmit}>Create account</button>\r\n                </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}